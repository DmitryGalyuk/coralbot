{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "coraldatafactory"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"coral_function_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'coral_function'"
		},
		"coral_SqlServer_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "coralsql.database.windows.net"
		},
		"coral_SqlServer_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "coral"
		},
		"coral_SqlServer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "dima"
		},
		"coral_function_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://coralreportfetch.azurewebsites.net"
		},
		"corar_keyvault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://coralkeys.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ExcelReportUploadToDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Parquet2DB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Excel2Parquet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "DateAdded",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									},
									{
										"name": "File_Name",
										"value": {
											"value": "@variables('file_name')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@concat(variables('file_name'), '.parquet')",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "gen",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "gen",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Id",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ParentId",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ParentId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Rank",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Rank",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Pending",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Pending",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Personal",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Personal",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Overall",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Overall",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "GroupVolume",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "GroupVolume",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "File_Name",
											"type": "String"
										},
										"sink": {
											"name": "File_Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DateAdded",
											"type": "String"
										},
										"sink": {
											"name": "DateAdded",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "InputParquetReports",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "coral_dailystats",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Excel2Parquet",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Fetch from coral-club",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "file_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "processExcel",
							"body": {
								"value": "@concat('{\"file_name\": \"', variables('file_name'), '\"}')",
								"type": "Expression"
							},
							"headers": {},
							"method": "POST"
						},
						"linkedServiceName": {
							"referenceName": "coral_function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Fetch from coral-club",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "dailyFetch",
							"headers": {},
							"method": "GET"
						},
						"linkedServiceName": {
							"referenceName": "coral_function",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "file_name",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "file_name",
							"value": {
								"value": "@concat(formatDateTime(pipeline().TriggerTime, 'yyyy-MM-dd'), '.xlsx')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-23T16:21:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputParquetReports')]",
				"[concat(variables('factoryId'), '/datasets/coral_dailystats')]",
				"[concat(variables('factoryId'), '/linkedServices/coral_function')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Manually upload parquets to db')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For each excel",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "List Excel files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('List Excel files').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "upload to coral DB",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "excel2parquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"additionalColumns": [
												{
													"name": "File_Name",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "DateAdded",
													"value": {
														"value": "@replace(item().name, '.xlsx', '')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@concat(item().name, '.parquet')",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "ParquetReadSettings"
											}
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": true
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "gen",
														"type": "Int64",
														"physicalType": "INT64"
													},
													"sink": {
														"name": "gen",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Id",
														"type": "Int64",
														"physicalType": "INT64"
													},
													"sink": {
														"name": "Id",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Name",
														"type": "String",
														"physicalType": "UTF8"
													},
													"sink": {
														"name": "Name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "ParentId",
														"type": "Int64",
														"physicalType": "INT64"
													},
													"sink": {
														"name": "ParentId",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "Rank",
														"type": "String",
														"physicalType": "UTF8"
													},
													"sink": {
														"name": "Rank",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "Pending",
														"type": "Double",
														"physicalType": "DOUBLE"
													},
													"sink": {
														"name": "Pending",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "Personal",
														"type": "Double",
														"physicalType": "DOUBLE"
													},
													"sink": {
														"name": "Personal",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "Overall",
														"type": "Double",
														"physicalType": "DOUBLE"
													},
													"sink": {
														"name": "Overall",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "GroupVolume",
														"type": "Double",
														"physicalType": "DOUBLE"
													},
													"sink": {
														"name": "GroupVolume",
														"type": "Double",
														"physicalType": "float"
													}
												},
												{
													"source": {
														"name": "File_Name",
														"type": "String"
													},
													"sink": {
														"name": "File_Name",
														"type": "String",
														"physicalType": "nvarchar"
													}
												},
												{
													"source": {
														"name": "DateAdded",
														"type": "String"
													},
													"sink": {
														"name": "DateAdded",
														"type": "DateTime",
														"physicalType": "date"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "InputParquetReports",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "coral_dailystats",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "excel2parquet",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "processExcel",
										"body": {
											"value": "@concat('{\"file_name\": \"', item().name, '\"}')",
											"type": "Expression"
										},
										"headers": {},
										"method": "POST"
									},
									"linkedServiceName": {
										"referenceName": "coral_function",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "List Excel files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "InputExcels",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-23T16:42:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputExcels')]",
				"[concat(variables('factoryId'), '/datasets/InputParquetReports')]",
				"[concat(variables('factoryId'), '/datasets/coral_dailystats')]",
				"[concat(variables('factoryId'), '/linkedServices/coral_function')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputExcels')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "reportsstore"
					},
					"sheetIndex": 0
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputParquetReports')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "processedreports"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "rownum",
						"type": "INT64"
					},
					{
						"name": "gen",
						"type": "INT64"
					},
					{
						"name": "Id",
						"type": "INT64"
					},
					{
						"name": "ParentId",
						"type": "INT64"
					},
					{
						"name": "Name",
						"type": "UTF8"
					},
					{
						"name": "Rank",
						"type": "UTF8"
					},
					{
						"name": "Pending",
						"type": "DOUBLE"
					},
					{
						"name": "Personal",
						"type": "DOUBLE"
					},
					{
						"name": "GroupVolume",
						"type": "DOUBLE"
					},
					{
						"name": "Overall",
						"type": "DOUBLE"
					},
					{
						"name": "__index_level_0__",
						"type": "INT64"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessedExcels')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "processedreports"
					},
					"sheetIndex": 0
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/coral_dailystats')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "coral_SqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "gen",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ParentId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Rank",
						"type": "nvarchar"
					},
					{
						"name": "Pending",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Personal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Overall",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DateAdded",
						"type": "date"
					},
					{
						"name": "GroupVolume",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dailystats"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/coral_SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/coral_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('coral_SqlServer_properties_typeProperties_server')]",
					"database": "[parameters('coral_SqlServer_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('coral_SqlServer_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "corar_keyvault",
							"type": "LinkedServiceReference"
						},
						"secretName": "coral-db-dima-pass"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/corar_keyvault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/coral_function')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('coral_function_properties_typeProperties_functionAppUrl')]",
					"authentication": "MSI",
					"resourceId": "f1f492d1-ad11-4504-a071-9246d50970aa",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('coral_function_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/corar_keyvault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('corar_keyvault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dailyTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ExcelReportUploadToDB",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-06-04T02:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ExcelReportUploadToDB')]"
			]
		}
	]
}